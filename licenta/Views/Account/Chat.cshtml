@model IEnumerable<licenta.ViewModel.UserConversationsViewModel>
@{
    var userName = User.Identity.Name;
    var date = DateTime.Now.ToString("dd MMMM");
    var isSeen = "";
}

<div class="friend_ctn">
    <div class="search_ctn">
        <div class="search_form_ctn">
            <input type="text" name="search" placeholder="cauta..." id="search_string" />
            <input type="submit" value="Cauta" id="find_people" />
        </div>

        @*when user searches for a friend a button will be displayed with the informations about that user, the form will send him to the chat action*@
        <div class="result_ctn" id="result_ctn">
        </div>
    </div>

    @if (!Model.Any())
    {
        <p>Nu sunt conversatii</p>
    }
    else
    {
        @*contains the users with who the logged user communicated*@
        <div class="conversations_ctn" id="conversations_ctn">
            @foreach (var conversation in Model)
            {
                @*if the message has been seen or fi the sender is the logged user do not color container*@
                if (conversation.IsSeen == true || conversation.Sender.Equals(userName))
                {
                    isSeen = "";
                }
                else
                {
                    isSeen = "message_not_seen";
                }
                @*for each conversation show a button to send the user to a page with that conversation*@
                <button type="submit" class="convo_ctn @isSeen " friend="@conversation.Name"@* name="@conversation.Name"*@ id="@conversation.Name">
                    <div class="friend">
                        <p>@conversation.Name</p>
                    </div>
                    <div class="message_txt">
                        <div class="sender_ctn">
                            @if (conversation.Sender == User.Identity.Name)
                            {
                                <p>Tu:</p>
                            }
                            else
                            {
                                <p> @conversation.Sender</p>
                            }
                        </div>
                        <div class="text_ctn">
                            <p>@conversation.Text</p>
                        </div>
                    </div>
                    <div class="message_time">
                        @*if the message has been send in the current day do not show the date*@
                        @if (conversation.Time.Date.Equals(DateTime.Now.Date))
                        {
                            <p>Azi @conversation.Time.ToString("H:mm")</p>
                        }
                        else
                        {
                            <p>@conversation.Time.ToString("dd MMM H:mm")</p>

                        }
                    </div>
                </button>
            }
        </div>
    }
</div>
<div class="chat_ctn">
    <div class="messages_ctn" id="chat">

    </div>
    @*container to send a new message*@
    <div class="send_msg_ctn">
        @*input field*@
        <div class="form_group_input">
            <input name="Text" class="form-control" id="messageText" />
        </div>
        @*send button*@
        <div class="form_group_submit">
            <button type="submit" id="submitButton" class="btn"><img src="~/Images/Icons/send.png" /></button>
        </div>
        @*hidden field for who is the sender and who receives the message*@
        <input type="hidden" value="@userName" name="SenderUsername" id="senderUsername" />
        <input type="hidden" name="ReceiverUsername" id="receiverUsername" />
    </div>
</div>


@section Scripts{
    <script>
        const SenderUsername = "@ViewBag.CurrentUser";
        const CurrentUser = "@userName";
    </script>
    <script src="~/js/chatjs.min.js"></script>
@*    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/chat.js"></script>*@
}
@section Style{
    <link href="~/css/chat.css" type="text/css" rel="stylesheet" />
}